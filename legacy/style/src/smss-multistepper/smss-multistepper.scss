@import '~theme';
.smss-multistepper {
    display: flex;
    align-items: center;
    & .smss-multistepper-item {
        &:last-child {
            .smss-multistepper-item__divider {
                display: none;
            }
        }
    }

    &--compact {
        & .smss-multistepper-item {
            font-size: get-font-size('h7', 'rem');

            &__number {
                height: get-height('label', 'rem');
                width: get-height('label', 'rem');
                font-size: get-font-size('body-xsmall', 'rem');
                font-weight: get-font-weight('medium');
                line-height: get-height('label', 'rem');
            }
        }

        &.smss-multistepper--vertical .smss-multistepper-item__divider {
            margin: get-spacing('sm', 'rem')
                calc(#{get-height('label', 'rem')} / 2);
        }
    }

    &--vertical {
        flex-direction: column;
        & .smss-multistepper-item {
            flex-direction: column;
            &__divider {
                width: 1px;
                height: get-height('tile', 'rem');
                margin: get-spacing('sm', 'rem')
                    calc(#{get-width('circle', 'rem')} / 2);
                align-self: flex-start;
            }

            &--active .smss-multistepper-item__content {
                border-color: transparent;
            }
        }
    }
}

.smss-multistepper-item {
    display: flex;
    color: get-text-color('low-emphasis');
    border: 1px solid transparent;
    font-size: get-font-size('h6', 'rem');
    font-weight: get-font-weight('semibold');
    align-items: center;
    overflow: hidden;

    & > * {
        @include text-overflow();
    }

    &:hover {
        cursor: pointer;
        color: get-text-color(
            'primary'
        ); // TODO: confirm this is the correct hover state
    }

    &:focus-visible {
        outline: none;
        border: 1px solid get-border-color('primary');
    }

    &__content {
        display: flex;
        align-items: center;
        border-bottom: 2px solid transparent;
        height: get-height('default', 'rem');
        line-height: get-height('default', 'rem');
    }

    &__number {
        height: get-height('circle', 'rem');
        width: get-width('circle', 'rem');
        border-radius: 50%;
        border: 1px solid get-text-color('medium-emphasis');
        color: get-text-color('medium-emphasis');
        margin-right: get-spacing('sm', 'rem');
        text-align: center;
        line-height: get-height('circle', 'rem');
        flex-shrink: 0;
    }

    &__divider {
        width: get-width('icon', 'rem');
        height: 1px;
        background: get-border-color('default');
        vertical-align: middle;
        margin: 0 get-spacing('sm', 'rem');
        flex-shrink: 0;
        content: '';
        border-bottom-color: transparent;
    }

    &--active {
        color: get-text-color('default');

        .smss-multistepper-item__content {
            border-bottom-color: get-border-color('primary');
        }

        .smss-multistepper-item__number {
            background: get-background-color('primary');
            color: get-text-color('white');
            border-color: get-border-color('primary');
        }
    }

    &--optional {
        .smss-multistepper-item__number {
            border-style: dashed;
        }
    }

    &--error {
        .smss-multistepper-item__number {
            background: get-background-color('error');
            color: get-text-color(
                'white'
            ); // TODO: is there a way to make the color transparent?
            border-color: get-border-color('error');
        }
    }

    &--completed {
        .smss-multistepper-item__number {
            background: get-background-color('primary');
            color: get-text-color(
                'white'
            ); // TODO: is there a way to make the color transparent?
            border-color: get-border-color('primary');
        }
    }

    &--disabled,
    &:disabled,
    &[disabled='disabled'] {
        @include no-events();
        color: get-text-color('disabled');
        &:hover {
            cursor: default;
        }
    }
}
